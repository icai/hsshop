<?php
/**
 * Created by PhpStorm.
 * Author: MeiJay
 * Date: 2017/12/6
 * Time: 19:07
 */

namespace App\S\ShareEvent;


use App\Lib\Redis\ShareEventRecordRedis;;
use App\S\S;
use WeixinService;
use DB;
use PHPExcel;


class ShareEventRecordService extends S
{


    private $_redis;
    private $_wid;
    private $_shopKey; // 当前店铺的翻新标识
    private $_sourceId; //分享者id
    private $_activityId; //享立减活动id




    private function __return($err_code = 0, $msg = 'success',$data = [])
    {
        $return = [
            'msg'       => $msg,
            'err_code'  => $err_code,
            'data'      => $data
        ];
        return  $return;
    }

    /**
     * ShareEventRecordService constructor.
     * @param int $source_id //分享者id
     * @param int $activity_id //活动id
     * @param int $wid        //分享链接中的key
     */
    public function __construct()
    {
        $this->_redis = new ShareEventRecordRedis();
        parent::__construct('ShareEventRecord');
    }

    /**
     * 创建记录
     * @param $data 记录内容
     * @return array
     * @update 何书哲 添加成功返回记录数据
     */
    public function createShareEventRecord($data)
    {
        $data['ip'] = getIP();
        $obj = $this->model->create($data);
        if(!$obj)
        {
            return $this->__return(1,'数据库添加失败');
        }
        return $this->__return(0, '', $obj->toArray());
    }

    public function count($where = [])
    {
       return $this->model->where($where)->count();
    }


    public function getListWithPage($where = [], $orderBy = '', $order = '', $pageSize = 0)
    {
        return parent::getListWithPage($where, $orderBy, $order, $pageSize); // TODO: Change the autogenerated stub
    }


    public function getList($where = [], $skip = "", $perPage = "", $orderBy = "", $order = "")
    {
        return parent::getList($where, $skip, $perPage, $orderBy, $order); // TODO: Change the autogenerated stub
    }


    public function getListById(array $idArr)
    {
        $idArr = array_values($idArr);
        $mysqlData = $this->model->whereIn('id',$idArr)->get()->toArray();
        $mysqlData = array_column($mysqlData, null,'id');
        return sortArr($idArr,$mysqlData);
    }


    public function update($where)
    {
        $flag = $this->model->where($where)->update(['current_status' => 1]);
        if($flag == false){
            $this->__return(1,'数据库更新失败');
        }
        return $this->__return();
    }


    /**
     * 获取助减用户列表（并根据ip进行排序）
     * @author wuxiaoping <2017.12.28>
     * @param  [array] $data [条件数组数据]
     * @return [array]       [description]
     */
    public function getAllListSort($data,$page=1)
    {
        $where = $data;
        $pageSize = 8;  //每页显示8条数据
        $start = ($page-1)*$pageSize;
        //先进行分组排序
        $data = $this->model->select(DB::raw('count(ip) as number,ip'))->where($data)->groupBy('ip')->orderBy('number','DESC')->get()->toArray();
        $returnData = $list = [];
        $numMax = 0;
        //对已排完序的数据进行二次处理
        if ($data) {
            $numMax = $data[0]['number'];
            foreach ($data as $key => $value) {
                $where['ip'] = $value['ip'];
                $result[$value['ip']] = $this->model->wheres($where)->orderBy('created_at','DESC')->get()->toArray();
            }
            $list = [];
            if ($result) {
                foreach ($result as $key => $items) {
                    foreach ($items as $k => $item) {
                        array_push($list, $item);
                    }
                }
            }
        }
        $returnData['status'] = 1;
        $returnData['count']  = count($list);
        $returnData['numMax'] = $numMax;
        $returnData['list']   = array_slice($list,$start,$pageSize);

        return $returnData;
    }

    /**
     * todo 查询用户的红包金额
     * @param array $where
     * @return array
     * @author jonzhang
     * @date 2018-01-15
     */
    public function statRedPacket($where=[])
    {
        $returnData=['errCode'=>0,'errMsg'=>'','data'=>0.00];
        if(empty($where))
        {
            $returnData['errCode'] = -1;
            $returnData['errMsg'] = '查询数据为空';
            return $returnData;
        }
        $redPackMoney = $this->model->where($where)->where('red_packet_id','>',0)->sum('red_packet_money');
        if($redPackMoney===false)
        {
            $returnData['errCode'] = -2;
            $returnData['errMsg'] = '查询数据出现问题';
            return $returnData;
        }
        $returnData['data']=$redPackMoney;
        return $returnData;
    }

    /**
     * 获取记录的第几个记录信息
     * @param $share_event_id 享立减id
     * @param $mid 分享者id
     * @param $num 第几条
     * @return int
     * @author 何书哲 2018年8月9日
     */
    public function getRecordByOrder($share_event_id, $mid, $num) {
        $count = $this->model->where(['share_event_id'=>$share_event_id, 'source_id'=>$mid])->count();
        if ($count < $num) {
            return 0;
        }
        $shareData = $this->model->where(['share_event_id'=>$share_event_id, 'source_id'=>$mid])->orderBy('created_at', 'ASC')->skip($num-1)->take(1)->get()->toArray();
        return $shareData[0]['created_at'];
    }

    /**
     * 导出cxcel表格
     * @param array $data 数据
     * @author 何书哲 2018年8月10日
     */
    public function exportExcel($data = [])
    {
        $excelObj = new PHPExcel();
        //设置基本信息
        $excelObj->getProperties()
            ->setCreator("hs")
            ->setLastModifiedBy("hs")
            ->setTitle("享立减分享记录")
            ->setSubject("享立减分享记录")
            ->setDescription("享立减分享记录")
            ->setKeywords("享立减分享记录")
            ->setCategory("result file");
        //设置单元格宽度
        $excelObj->getActiveSheet()->getColumnDimension('A')->setWidth(20);
        $excelObj->getActiveSheet()->getColumnDimension('B')->setWidth(20);
        $excelObj->getActiveSheet()->getColumnDimension('C')->setWidth(20);
        $excelObj->getActiveSheet()->getColumnDimension('D')->setWidth(20);
        $excelObj->getActiveSheet()->getColumnDimension('E')->setWidth(20);
        $excelObj->getActiveSheet()->getColumnDimension('F')->setWidth(20);
        //标题行
        $excelObj->setActiveSheetIndex()
            ->setCellValue('A1', '昵称')
            ->setCellValue('B1', '分享来源')
            ->setCellValue('C1', '分享时间')
            ->setCellValue('D1', '点击参与人数')
            ->setCellValue('E1', '完成时间')
            ->setCellValue('F1', '是否购买');
        foreach($data as $k => $v){
            $num = $k + 2;
            //Excel数据填充
            $excelObj->setActiveSheetIndex()
                ->setCellValue('A'.$num, !empty($v['nickname']) ? $v['nickname'] : '暂无昵称')
                ->setCellValue('B'.$num, $v['source'])
                ->setCellValue('C'.$num, $v['share_at'])
                ->setCellValue('D'.$num, $v['actor_num'])
                ->setCellValue('E'.$num, $v['complete_time'])
                ->setCellValue('F'.$num, $v['is_purchased']==1 ? '是' : '否');
        }
        //准备导出
        $excelObj->setActiveSheetIndex();
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="享立减分享记录_' . time() . '.xls"');
        header('Cache-Control: max-age=0');
        $objWriter = \PHPExcel_IOFactory::createWriter($excelObj, 'Excel5');
        $objWriter->save('php://output');
    }


    /**
     * 批量更新
     * @param $ids
     * @param $data
     * @return bool
     * @author 张永辉
     */
    public function batchUpdate($ids, $data)
    {
        $res = $this->model->whereIn('id', $ids)->update($data);
        if ($res) {
            $redis       = $this->_redis;
            $redisUpData = [];
            foreach ($ids as $val) {
                $redisUpData[] = array_merge($data, ['id' => $val]);
            }
            return $redis->updateArr($redisUpData);
        } else {
            return false;
        }
    }

}