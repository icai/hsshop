<?php
namespace App\S\ShareEvent;
use App\Jobs\SendTplMsg;
use App\Lib\Redis\AdminSellerkpiRedis;
use App\Lib\Redis\LiSalesmanRedis;
use App\S\Member\MemberGarbageService;
use App\S\S;
use App\Lib\Redis\LiDetail;
use PHPExcel;

//1、访问自己页面，其他人页面，须 初始化自己的集赞 即查询自己的享立减
//2、分享后, 查询数据，未分享，则调用接口 改为已分享
//3、有人帮我赞后，记录立减时间，更新集赞人数，传递是否已经满
//4、领取成功，修改我的集赞
class AdminSellerkpiService extends S
{
	public function __construct()
    {
        parent::__construct('AdminSellerkpi');
    }

    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20170626
     * @desc 根据id获取列表
     * @param $id
     * @return array
     */
    public function getRowById($id)
    {
        $result = [];
        $redis = new AdminSellerkpiRedis();
        $result = $redis->getRow($id);

        if (empty($result)) {
            $result = $this->model->wheres(['id' => $id])->first();
            if (!$result) {
                return [];
            }
            $result = $result->toArray();
            $redis->addArr($result);
        }
        return $result;
    }

    public function getListById(array $idArr)
    {
        $result = [];
        $redisData = $mysqlData = [];
        $redisId = [];
        $idArr = array_values($idArr);
        $redis = new AdminSellerkpiRedis();
        $result = $redis->getArr($idArr);
        foreach ($idArr as $key => $value) {
            if (empty($result[$key]))
                $redisId[] = $value;
            else
                $redisData[$value] = $result[$key];
        }
        if (!empty($redisId)) {
            $mysqlData = $this->model->whereIn('id',$redisId)->get()->load('SellerkpiRegister')->load('SellerkpiSalesman')->toArray();
            $mysqlData = array_column($mysqlData, null,'id');
            foreach ($mysqlData as &$data) {
                if(!empty($data['SellerkpiRegister'])) {
                    $data['SellerkpiRegister'] = json_encode($data['SellerkpiRegister'],JSON_UNESCAPED_UNICODE);
                }

                if (!empty($data['SellerkpiSalesman'])) {
                    $data['SellerkpiSalesman'] = json_encode($data['SellerkpiSalesman'],JSON_UNESCAPED_UNICODE);
                }
            }
            $redis->setArr($mysqlData);
        }
        return sortArr($idArr, ($redisData + $mysqlData) );
    }

    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20170626
     * @desc 根据id更新数据
     * @param $id
     * @param $data
     */
    public function update($id,$data){
        $redisData = $data;
        if (isset($data['SellerkpiRegister']) || isset($data['SellerkpiSalesman'])) {
            unset($data['SellerkpiRegister']);
            unset($data['SellerkpiSalesman']);
        }
        $res = $this->model->where('id',$id)->update($data);
        if ($res){
            $storeRedis = new AdminSellerkpiRedis();
            if (isset($redisData['SellerkpiRegister'])) {
                $redisData['SellerkpiRegister'] = json_encode($redisData['SellerkpiRegister'],JSON_UNESCAPED_UNICODE);
            }

            if(isset($redisData['SellerkpiSalesman'])) {
                $redisData['SellerkpiSalesman'] = json_encode($redisData['SellerkpiSalesman'],JSON_UNESCAPED_UNICODE);
            }
            return $storeRedis->update($id,$redisData);
        }
    }

    public function del($id)
    {
        $res = $this->model->where('id',$id)->delete();
        if ($res){
            $storeRedis = new AdminSellerkpiRedis();
            return $storeRedis->del($id);
        }else{
            return false;
        }
    }

    public function add($data)
    {
        return $this->model->insertGetId($data);
    }

    public function getlistPage()
    {
        return $this->getListWithPage([], '', '');
    }

    public function getList($where = [], $skip = "", $perPage = "", $orderBy = "", $order = "")
    {
        return parent::getList($where, $skip, $perPage, $orderBy, $order); // TODO: Change the autogenerated stub
    }

    public function getPage($where)
    {
        return $this->getListWithPage($where, '', '');
    }

    //导出
    public function export($data)
    {
        $excelObj = new PHPExcel();
        //设置基本信息
        $excelObj->getProperties()
            ->setCreator("hs")
            ->setLastModifiedBy("hs")
            ->setTitle("导出客户")
            ->setSubject("导出客户")
            ->setDescription("导出客户")
            ->setKeywords("导出客户")
            ->setCategory("result file");
        //设置单元格宽度
            $excelObj->getActiveSheet()->getColumnDimension('A')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('B')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('C')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('D')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('E')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('F')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('G')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('H')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('I')->setWidth(20);
            $excelObj->getActiveSheet()->getColumnDimension('J')->setWidth(10);
            $excelObj->getActiveSheet()->getColumnDimension('K')->setWidth(10);
            $excelObj->getActiveSheet()->getColumnDimension('L')->setWidth(10);
            //标题行
            $excelObj->setActiveSheetIndex()
                ->setCellValue('A1', '序号')
                ->setCellValue('B1', '客户名称')
                ->setCellValue('C1', '手机号')
                ->setCellValue('D1', '公司名称')
                ->setCellValue('E1', '职务')
                ->setCellValue('F1', '来源')
                ->setCellValue('G1', '标记')
                ->setCellValue('H1', '时间')
            ;
            //对一个订单多条数据分行显示
            foreach($data as $k => $v)
            {
                $num = $k + 2;
                if($v['is_valid']==1)
                {
                    $valid = '标记有效';
                }else{
                    $valid = '标记无效';
                }
                //Excel数据填充
                $excelObj->setActiveSheetIndex()
                    ->setCellValue('A'.$num, "$k"+1)
                    ->setCellValue('B'.$num, $v['SellerkpiRegister']['name'] ?? '')
                    ->setCellValue('C'.$num, $v['SellerkpiRegister']['phone'] ?? '')
                    ->setCellValue('D'.$num, $v['SellerkpiRegister']['company_name'] ?? '')
                    ->setCellValue('E'.$num, $v['SellerkpiRegister']['company_position'] ?? '')
                    ->setCellValue('F'.$num, $v['SellerkpiSalesman']['name'] ?? '公司')
                    ->setCellValue('G'.$num, $valid ?? '标记有效')
                    ->setCellValue('H'.$num,  $v['addtime'])
                ;
            }
        //准备导出
        $excelObj->setActiveSheetIndex();
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="销售客户报表_' . time() . '.xls"');
        header('Cache-Control: max-age=0');
        $objWriter = \PHPExcel_IOFactory::createWriter($excelObj, 'Excel5');
        $objWriter->save('php://output');
    }

}
