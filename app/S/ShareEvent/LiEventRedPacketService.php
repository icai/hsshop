<?php
/**
 * Created by PhpStorm.
 * Author: MeiJay
 * Date: 2018/1/8
 * Time: 9:00
 */

namespace App\S\ShareEvent;



use App\Lib\Redis\LiRedPacketRedis;
use App\S\S;

class LiEventRedPacketService extends S
{


    public function __construct($modelName = 'LiRedPacket')
    {
        parent::__construct($modelName);
    }



    public function update($id,$data)
    {
        $re = $this->model->where(['id' => $id])->update($data);
        if($re) {
            $redis = new LiRedPacketRedis();
            $redis->updateRow($data);
        }
        return $re;
    }


    public function create($data)
    {

        return $this->model->insertGetId($data);
    }


    public function getRowById($id)
    {
        $redis = new LiRedPacketRedis();
        $data = $redis->getRow($id);
        if ($data) {
            return $data;
        }
        $obj = $this->model->find($id);
        if ($obj) {
            $obj = $obj->toArray();
            $redis->add($obj);
        }
        return $obj;
    }

    public function getRowByWhere($where = [])
    {
        $obj = $this->model->where($where)->first();
        if ($obj) {
            $obj = $obj->toArray();
        }
        return $obj;
    }


    public function getLastLog($where = [])
    {
        $obj = $this->model->where($where)->orderBy('created_at','desc')->first();
        if ($obj) {
            $obj = $obj->toArray();
        }
        return $obj;
    }



    public function getListById(array $idArr)
    {
        $redisData = $mysqlData = [];
        $redisId = [];
        $idArr = array_values($idArr);
//        $redis = new RedPacketRedis();
//        $result = $redis->getArr($idArr);
//        foreach ($idArr as $key => $value) {
//            if (empty($result[$key]))
//                $redisId[] = $value;
//            else
//                $redisData[$value] = $result[$key];
//        }
//        if (!empty($redisId)) {
            $mysqlData = $this->model->whereIn('id',$idArr)->get()->toArray();
            $mysqlData = array_column($mysqlData, null,'id');
//            $redis->setArr($mysqlData);
//        }
        return sortArr($idArr, ($redisData + $mysqlData) );
    }

    public function getList($where = [], $skip = "", $perPage = "", $orderBy = "", $order = "")
    {
        return parent::getList($where, $skip, $perPage, $orderBy, $order); // TODO: Change the autogenerated stub
    }


}