<?php

/**
 * Created by zhangyh.
 * User: zhangyh
 * Date: 2017/3/13  14:52
 * DESC
 */
namespace App\S\Groups;
use App\Lib\Redis\GroupMemberRedis;
use App\Lib\Redis\GroupsRedis;
use App\Lib\Redis\GroupsRuleRedis;
use App\S\S;
use DB;

class GroupsService extends S
{
    /**
     *
     * FileSystemService constructor.
     * @desc 构造方法
     */
    public function __construct()
    {
        parent::__construct('Groups');
    }





    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20170626
     * @desc 根据id获取列表
     * @param $id
     * @return array
     */
    public function getRowById($id)
    {
        $result = [];
        $redis = new GroupsRedis();
        $result = $redis->getRow($id);

        if (empty($result)) {
            $result = $this->model->wheres(['id' => $id])->first();
            if (!$result) {
                return [];
            }
            $result = $result->toArray();
            $redis->addArr($result);
        }
        return $result;
    }

    public function getListById(array $idArr)
    {
        $result = [];
        $redisData = $mysqlData = [];
        $redisId = [];
        $idArr = array_values($idArr);
        $redis = new GroupsRedis();
        $result = $redis->getArr($idArr);
        foreach ($idArr as $key => $value) {
            if (empty($result[$key]))
                $redisId[] = $value;
            else
                $redisData[$value] = $result[$key];
        }
        if (!empty($redisId)) {
            $mysqlData = $this->model->whereIn('id',$redisId)->get()->toArray();
            $mysqlData = array_column($mysqlData, null,'id');
            $redis->setArr($mysqlData);
        }
        return sortArr($idArr, ($redisData + $mysqlData) );
    }

    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20170626
     * @desc 根据id更新数据
     * @param $id
     * @param $data
     */
    public function update($id,$data){
        $res = $this->model->where('id',$id)->update($data);
        if ($res){
            $storeRedis = new GroupsRedis();
            return $storeRedis->update($id,$data);
        }
    }

    public function del($id)
    {
        $res = $this->model->where('id',$id)->delete();
        if ($res){
            $storeRedis = new GroupsRedis();
            return $storeRedis->del($id);
        }else{
            return false;
        }
    }

    public function add($data)
    {
        return $this->model->insertGetId($data);
    }

    public function getlistPage($where,$orderBy = '', $order = '')
    {
        return $this->getListWithPage($where, $orderBy, $order);
    }


    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20170717
     * @desc 获取团编号
     */
    public function getIdentifier()
    {
        $identifier = "T".date("YmdHis");
        for($i=0;$i<6;$i++){
            $identifier = $identifier.rand(0,9);
        }
        $res = $this->getList(['identifier'=>$identifier]);
        if ($res){
            return $this->getIdentifier();
        }else{
            return $identifier;
        }
    }


    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20170719
     * @desc  根据规则获取团
     * @param $rid
     */
    public function getListByRuleId($rid)
    {
        return $this->getList(['rule_id'=>$rid]);
    }


    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20170720
     * @desc 批量更新
     */
    public function batchUpdate($ids,$data)
    {
        $res = $this->model->whereIn('id',$ids)->update($data);
        if ($res){
            $redis = new GroupsRedis();
            return $redis->batchUpdate($ids,$data);
        }else{
            return false;
        }
    }

    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date 20171012
     * @desc
     * @param $ruleId
     */
    public function count($where = [])
    {
        return parent::count($where); // TODO: Change the autogenerated stub
    }

    public function getGroupsCount($rule_id,$mid)
    {
        $sql = 'SELECT COUNT(g.id) as num FROM ds_groups as g LEFT JOIN ds_groups_detail as gd ON g.id=gd.groups_id WHERE g.rule_id='.$rule_id.' AND member_id<>'.$mid.' AND g.status=1 GROUP BY g.id';
        $res = DB::select($sql);
        if ($res){
            $res = json_decode(json_encode($res),true);
            $sum = 0;
            foreach ($res as $val){
                $sum=$sum+$val['num'];
            }
            return $sum;
        }else{
            return 0;
        }

    }


    /**
     * @author zhangyh
     * @Email zhangyh_private@foxmail.com
     * @date  20171120
     * @desc 根据groupsid 获取限购商品数量
     */
    public function getLimitNumByGroupsId($id)
    {
        $sql = 'SELECT g.id,gr.num as ruleNum FROM ds_groups as g LEFT JOIN ds_groups_rule as gr ON g.rule_id=gr.id WHERE g.id=' . $id;
        $res = DB::select($sql);
        if ($res) {
            $res = json_decode(json_encode($res), true);
            return $res[0]['ruleNum'];
        } else {
            return 0;
        }
    }
    public function getGroupsInfo($gid)
    {
        $sql = 'SELECT g.id,g.rule_id,gr.distribute_template_id FROM ds_groups as g LEFT JOIN ds_groups_rule as gr ON g.rule_id = gr.id WHERE g.id = '.$gid;
        $res = DB::select($sql);
        if ($res){
            $res = json_decode(json_encode($res),true);
            return $res;
        }else{
            return [];
        }
    }

    public function getInfoByIdentifier($identifier){
        $sql = "SELECT `id` FROM ds_groups WHERE id <> 0 AND identifier LIKE '%".$identifier."%'";
        $res = DB::select($sql);
        if($res){
            $res = json_decode(json_encode($res),true);
            return $res;
        }else{
            return [];
        }
    }


    /**
     * 统计多少人参团
     * @param $ruleId
     * @author 张永辉
     */
    public function getSumNum($ruleId)
    {
        return $this->model->where('rule_id',$ruleId)->sum('num');
    }


    /**
     * 查询团ID
     * @param $ruleId
     * @return array
     * @author 张永辉
     */
    public function getIdByRuleId($ruleId){
        $res = $this->model->where('rule_id',$ruleId)->where('status','>',0)->get(['id'])->toArray();
        if ($res){
            return array_column($res,'id');
        }else{
            return [];
        }
    }


    /**
     * 获取最新的2条mid数据
     * @param $ruleId
     * @return array
     * @author: 梅杰 2018年9月14日
     */
    public function getLastMemberIds($ruleId){
        $redis = new GroupMemberRedis($ruleId);
        if ($re = $redis->get()) {
            return array_unique($re);
        }
        //如果不存在就从数据数据获取
        $res = $this->model->select(['member_id'])->where('rule_id',$ruleId)
            ->leftJoin('groups_detail as d','groups.id','=','d.groups_id')->where('status','>',0)
            ->groupBy('member_id')->orderBy('groups.id','desc')->limit(2)->get()->toArray();
        if ($res) {
            $res = array_column($res,'member_id');
            foreach ($res as $mid) {
                $redis->add($mid);
            }
        }
        return $res;
    }


}























